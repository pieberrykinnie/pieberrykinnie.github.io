---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { formatDate } from '../../utils/dateUtils';

// Get all blog posts
const blogPosts = await getCollection('blog', ({ data }) => {
  return !data.draft;
});

// Sort posts by date (newest first)
const sortedPosts = blogPosts.sort((a, b) =>
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

// Get unique categories and tags
const categories = ['All', ...new Set(sortedPosts.map(post => post.data.category))];
const allTags = [...new Set(sortedPosts.flatMap(post => post.data.tags))];

// Group posts by category
const postsByCategory = {};
sortedPosts.forEach(post => {
  const category = post.data.category;
  if (!postsByCategory[category]) {
    postsByCategory[category] = [];
  }
  postsByCategory[category].push(post);
});

// Get featured posts
const featuredPosts = sortedPosts.filter(post => post.data.featured);
---

<Layout title="Blog - Peter Vu" description="Read my technical writeups, course projects, and thoughts on computer science and technology.">
	<div class="py-16 px-4 sm:px-6 lg:px-8">
		<div class="max-w-6xl mx-auto">
			<!-- Header -->
			<div class="text-center mb-16 animate-fade-in">
				<h1 class="text-4xl font-bold text-primary mb-4">Blog & Technical Writeups ✍️</h1>
				<p class="text-secondary text-lg max-w-3xl mx-auto">
					Welcome to my blog! Here you'll find technical writeups, course project reflections, and my thoughts on computer science and technology.
				</p>
			</div>

			<!-- Blog Statistics -->
			<div class="grid grid-cols-2 md:grid-cols-4 gap-6 mb-16">
				<div class="text-center card p-6 animate-scale-in" style="--index: 0;">
					<div class="text-3xl font-bold text-accent mb-2">{sortedPosts.length}</div>
					<div class="text-secondary">Total Posts</div>
				</div>
				<div class="text-center card p-6 animate-scale-in" style="--index: 1;">
					<div class="text-3xl font-bold text-accent mb-2">{categories.length - 1}</div>
					<div class="text-secondary">Categories</div>
				</div>
				<div class="text-center card p-6 animate-scale-in" style="--index: 2;">
					<div class="text-3xl font-bold text-accent mb-2">{featuredPosts.length}</div>
					<div class="text-secondary">Featured Posts</div>
				</div>
				<div class="text-center card p-6 animate-scale-in" style="--index: 3;">
					<div class="text-3xl font-bold text-accent mb-2">{allTags.length}</div>
					<div class="text-secondary">Topics</div>
				</div>
			</div>

			<!-- Featured Posts Section -->
			{featuredPosts.length > 0 && (
				<div class="mb-16">
					<h2 class="text-3xl font-bold text-primary mb-8 text-center">Featured Posts</h2>
					<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
						{featuredPosts.slice(0, 2).map((post, index) => (
							<article class="card overflow-hidden animate-slide-in-left" style={`--index: ${index};`}>
								{post.data.image && (
									<div class="h-48 overflow-hidden">
										<img
											src={post.data.image}
											alt={post.data.title}
											class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
										/>
									</div>
								)}
								<div class="p-6">
									<div class="flex items-center gap-2 mb-3">
										<span class="px-3 py-1 bg-gradient-to-r from-orange-400 to-orange-600 text-white text-sm font-medium rounded-full">
											Featured
										</span>
										<span class="px-3 py-1 bg-accent text-white text-sm font-medium rounded-full">
											{post.data.category}
										</span>
										{post.data.courseCode && (
											<span class="px-3 py-1 bg-blue-100 text-blue-800 text-sm font-medium rounded-full">
												{post.data.courseCode}
											</span>
										)}
									</div>
									<h3 class="text-xl font-bold text-primary mb-3 line-clamp-2">
										<a href={`/blog/${post.slug}`} class="hover:text-accent transition-colors">
											{post.data.title}
										</a>
									</h3>
									<p class="text-secondary mb-4 line-clamp-3">{post.data.description}</p>
									<div class="flex items-center justify-between">
										<span class="text-sm text-secondary">{formatDate(post.data.publishDate)}</span>
										<a href={`/blog/${post.slug}`} class="btn btn-sm btn-primary">
											Read More →
										</a>
									</div>
								</div>
							</article>
						))}
					</div>
				</div>
			)}

			<!-- Filter Buttons -->
			<div class="flex flex-wrap justify-center gap-3 mb-12 animate-slide-in-left">
				{categories.map((category) => (
					<button
						class={`filter-btn px-4 py-2 rounded-lg font-medium transition-all duration-200 ${
							category === 'All'
								? 'bg-primary text-white'
								: 'bg-surface border border-color text-secondary hover:border-primary hover:text-accent'
						}`}
						data-category={category}
					>
						{category}
					</button>
				))}
			</div>

			<!-- Blog Posts Grid -->
			<div id="posts-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 animate-stagger">
				{sortedPosts.map((post, index) => (
					<article class="post-item card overflow-hidden animate-slide-in-up" style={`--index: ${index % 6};`} data-category={post.data.category}>
						{post.data.image && (
							<div class="h-40 overflow-hidden">
								<img
									src={post.data.image}
									alt={post.data.title}
									class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
								/>
							</div>
						)}
						<div class="p-6">
							<div class="flex items-center gap-2 mb-3">
								<span class="px-3 py-1 bg-accent text-white text-sm font-medium rounded-full">
									{post.data.category}
								</span>
								{post.data.courseCode && (
									<span class="px-3 py-1 bg-blue-100 text-blue-800 text-sm font-medium rounded-full">
										{post.data.courseCode}
									</span>
								)}
								{post.data.featured && (
									<span class="px-3 py-1 bg-gradient-to-r from-orange-400 to-orange-600 text-white text-sm font-medium rounded-full">
										Featured
									</span>
								)}
							</div>
							<h3 class="text-lg font-bold text-primary mb-2 line-clamp-2">
								<a href={`/blog/${post.slug}`} class="hover:text-accent transition-colors">
									{post.data.title}
								</a>
							</h3>
							{post.data.courseName && (
								<p class="text-sm text-accent mb-2">{post.data.courseName}</p>
							)}
							<p class="text-secondary text-sm mb-4 line-clamp-3">{post.data.description}</p>
							<div class="flex items-center justify-between">
								<span class="text-xs text-secondary">{formatDate(post.data.publishDate)}</span>
								<div class="flex flex-wrap gap-1">
									{post.data.tags.slice(0, 2).map((tag) => (
										<span class="px-2 py-1 bg-surface-alt text-primary text-xs rounded">
											#{tag}
										</span>
									))}
								</div>
							</div>
						</div>
					</article>
				))}
			</div>

			<!-- No results message -->
			<div id="no-results" class="text-center py-12 hidden">
				<p class="text-secondary text-lg">No posts found for the selected category.</p>
			</div>

			<!-- Popular Tags -->
			<div class="mt-16 card p-8 animate-fade-in">
				<h2 class="text-3xl font-bold text-primary mb-6 text-center">Popular Topics</h2>
				<div class="flex flex-wrap justify-center gap-3">
					{allTags.slice(0, 12).map((tag) => (
						<span class="px-4 py-2 bg-surface-alt text-primary rounded-full hover:bg-accent hover:text-white transition-colors cursor-pointer">
							#{tag}
						</span>
					))}
				</div>
			</div>

			<!-- Newsletter/Contact CTA -->
			<div class="mt-16 text-center card p-8 bg-gradient-to-r from-accent to-primary animate-fade-in">
				<div class="max-w-2xl mx-auto">
					<h2 class="text-3xl font-bold text-white mb-4">Have Questions?</h2>
					<p class="text-white/90 mb-6">
						Found something interesting? Have questions about my projects or want to discuss technology?
						I'd love to hear from you!
					</p>
					<a href="/contact" class="btn bg-white text-primary hover:bg-gray-100">
						Get in Touch
					</a>
				</div>
			</div>
		</div>
	</div>
</Layout>

<script>
	// Filter functionality
	const filterBtns = document.querySelectorAll('.filter-btn');
	const postItems = document.querySelectorAll('.post-item');
	const noResults = document.getElementById('no-results');

	filterBtns.forEach(btn => {
		btn.addEventListener('click', () => {
			const category = btn.getAttribute('data-category');

			// Update active button
			filterBtns.forEach(b => {
				if (b.getAttribute('data-category') === category) {
					b.className = 'filter-btn px-4 py-2 rounded-lg font-medium transition-all duration-200 bg-primary text-white';
				} else {
					b.className = 'filter-btn px-4 py-2 rounded-lg font-medium transition-all duration-200 bg-surface border border-color text-secondary hover:border-primary hover:text-accent';
				}
			});

			// Filter posts
			let visibleCount = 0;
			postItems.forEach(item => {
				const itemCategory = item.getAttribute('data-category');
				if (category === 'All' || itemCategory === category) {
					item.style.display = 'block';
					visibleCount++;
				} else {
					item.style.display = 'none';
				}
			});

			// Show/hide no results message
			if (visibleCount === 0) {
				noResults?.classList.remove('hidden');
			} else {
				noResults?.classList.add('hidden');
			}
		});
	});
</script>

<style>
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	.animate-scale-in {
		animation: scaleIn 0.6s ease-out forwards;
		animation-delay: calc(var(--index) * 0.1s);
		opacity: 0;
		transform: scale(0.8);
	}

	.animate-slide-in-left {
		animation: slideInLeft 0.6s ease-out forwards;
		animation-delay: calc(var(--index) * 0.1s);
		opacity: 0;
		transform: translateX(-20px);
	}

	.animate-slide-in-up {
		animation: slideInUp 0.6s ease-out forwards;
		animation-delay: calc(var(--index) * 0.1s);
		opacity: 0;
		transform: translateY(20px);
	}

	@keyframes scaleIn {
		to {
			opacity: 1;
			transform: scale(1);
		}
	}

	@keyframes slideInLeft {
		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	@keyframes slideInUp {
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>