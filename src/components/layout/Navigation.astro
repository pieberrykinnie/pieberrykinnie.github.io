---
import ThemeToggle from '../ui/ThemeToggle.astro';

const currentPath = Astro.url.pathname;

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/experience', label: 'Experience' },
  { href: '/research', label: 'Research' },
  { href: '/projects', label: 'Projects' },
  { href: '/coursework', label: 'Coursework' },
  { href: '/blog', label: 'Blog' },
];
---

<nav class="bg-surface border-b border-color sticky top-0 z-50 backdrop-blur-md bg-opacity-90">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo/Name -->
      <a href="/" class="text-xl font-bold text-accent hover:text-primary transition-colors">
        peter vu üçì
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a
            href={item.href}
            class={`text-sm font-medium transition-colors hover:text-accent ${
              currentPath === item.href ? 'text-accent' : 'text-secondary'
            }`}
          >
            {item.label}
          </a>
        ))}
        <ThemeToggle />
      </div>

      <!-- Mobile Menu Button -->
      <div class="md:hidden flex items-center space-x-2">
        <ThemeToggle />
        <button
          id="mobile-menu-button"
          class="btn-secondary p-2"
          aria-label="Toggle menu"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden border-t border-color py-4">
      <div class="flex flex-col space-y-3">
        {navItems.map((item) => (
          <a
            href={item.href}
            class={`text-sm font-medium transition-colors hover:text-accent px-2 py-1 ${
              currentPath === item.href ? 'text-accent' : 'text-secondary'
            }`}
          >
            {item.label}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!mobileMenuButton?.contains(e.target as Node) && !mobileMenu?.contains(e.target as Node)) {
      mobileMenu?.classList.add('hidden');
    }
  });
</script>
